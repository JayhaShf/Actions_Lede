name: Default Openwrt

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH Action'
        required: false
        default: 'false'
  schedule:
    - cron: 30 4 * * 1,5

env: 
  # REPO_URL: 
  # REPO_BRANCH: master
  FEEDS_CONF: config/feeds.conf.default
  CONFIG_FILE: config/.config
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检查
      uses: actions/checkout@main

    - name: 创建环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /lede
        sudo chown $USER:$GROUPS /lede

    - name: 下载Lede源码
      working-directory: /lede
      run: |
        df -hT $PWD
        git clone https://github.com/coolsnowwolf/lede.git openwrt
        ln -sf /lede/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 覆写插件配置
      run: |
        cat /lede/openwrt/feeds.conf.default
        [ -e $FEEDS_CONF ] && cp -f $FEEDS_CONF /lede/openwrt/feeds.conf.default
        cat /lede/openwrt/feeds.conf.default
        cd /lede/openwrt
        make defconfig

    - name: 更新插件库
      run: | 
        cd /lede/openwrt && ./scripts/feeds update -a

    - name: 安装插件库
      run: | 
        cd /lede/openwrt && ./scripts/feeds install -a

    - name: 覆写
      run: |
        [ -e $CONFIG_FILE ] && cp -f $CONFIG_FILE /lede/openwrt/.config
        cd /lede/openwrt
        sed -i 's/192.168.1.1/192.168.3.10/g' package/base-files/files/bin/config_generate
        sed -i 's/OpenWrt/Jayha/g' package/base-files/files/bin/config_generate

    - name: 编译插件库
      run: |
        cd /lede/openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        make download -j8

    - name: 完成自定义固件
      run: |
        cd /lede/openwrt
        make -j1 V=s

#    - name: 转移固件
#      run: |
#        cd /lede/openwrt
#        sudo zip -rj openwrt.zip /lede/openwrt/bin/targets/*/*
#        mkdir -p ./bin/conf
#        sudo chmod 777 ./bin/conf
#        sudo mv -f openwrt.zip ./bin/conf
#        ls ./bin/conf

    - name: 上传固件
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt_firmware
        path: /lede/openwrt/bin/targets/*/*

#    - name: Test Post Large File
#      uses: xireiki/channel-post@v1
#      with:
#        bot_token: ${{ secrets.BOT_TOKEN }}
#        chat_id: ${{ secrets.CHAT_ID }}
#        context: OpenWrt Firmware
#        method: sendFile
#        path: ./bin/conf/openwrt.zip
#        large_file: true
#        api_id: ${{ secrets.API_ID }}
#        api_hash: ${{ secrets.API_HASH }}